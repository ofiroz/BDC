import cv2
from detecto import core, utils, visualize


def croped_person(image_path):
    image = utils.read_image(image_path)
    model = core.Model()

    labels, boxes, scores = model.predict_top(image)

    min_x = 0
    min_y = 0
    max_x = 0
    max_y = 0

    for lbl, box in zip(labels, boxes): # zip stops when the shorter list is finished
        if lbl is "person":
            #print(type(box)) # finding the person's box
            a, b, c, d = box # a,b,c,d are "torch.Tensor" objects
            min_x = int(a)
            min_y = int(b)
            max_x = int(c)
            max_y = int(d)
            # print(min_x, min_y, max_x, max_y)
            break

    # visualize.show_labeled_image(image, boxes, labels)

    img = cv2.imread(image_path)
    crop_img = img[min_y:max_y, min_x:max_x]
    # cv2.imshow("cropped", crop_img)
    # cv2.waitKey(0)
    return crop_img



if __name__ == "__main__":

    image_path = 'WhatsApp Image 2020-05-01 at 15.09.02.jpeg'

    cv2.imshow("cropped", croped_person(image_path))
    cv2.waitKey(0)



